---
title: "xiaowen_nov_13"
format: gfm
editor: visual
---

## we will work with bulk rna data Himes et al. gene expression data today

##data import

```{r}
counts <- read.csv("airway_scaledcounts.csv", row.names=1)
metadata <-  read.csv("airway_metadata.csv")
head(counts)
```

```{r}
head(metadata)

```

Q1. How many genes are in this dataset?

```{r}
nrow(counts)
```

Q2. How many ‘control’ cell lines do we have?

```{r}
sum(metadata$dex == "control")
```

##I wnat to compare control vs treated 1. lets split the counts into control.counts and treated.counts

```{r}
head(counts)
```

```{r}
metadata$dex == "control"

metadata$id == colnames(counts)

control.inds <- metadata$dex == "control"

treated.inds <- metadata$dex == "treated"
```

syntax with df\[rows,cols\]

```{r}
control.counts <- counts[,control.inds]


treated.counts <- counts[,treated.inds]

```

2.lets calculate the mean counts per gene for control and treated and then we can compare these. lets calculte control.mean and treated.mean

I can use the apply() function to apply mean()over the rows or columes.

```{r}
#apply(control.counts, 1, mean)
#apply(treated.counts, 1, mean)
```

Q5 (a). I want to do a plot that has control on the x, treated on the y

```{r}
control_means <- apply(control.counts, 1, mean)
treated_means <- apply(treated.counts, 1, mean)

meancounts <- data.frame(control_means,treated_means)

plot(meancounts)
```

```{r}
library(ggplot2)
ggplot(meancounts, aes(x = control_means, y = treated_means)) +
  geom_point(color = "blue", size = 2) 
```

Q6

```{r}
plot(meancounts,log="xy")
```

WE most often use log2 transforms here because it makes the math easier.

```{r}
log2(10 /20)
log2(40/10)
log2(1/4)
```

let s calculate log2 fold change and addit to our table meancounts

```{r}
meancounts$log2fc <- log2(meancounts$treated_means/meancounts$control_means)
head(meancounts)
```

filter out all gens with zero counts in either control or treated

```{r}
to.rm <- rowSums(meancounts[,1:2] == 0) >0
mycounts <- meancounts[!to.rm,]
#mycounts
```

Q how many "down" regulated genes do we have at the common log2 fold change value of -2

```{r}
sum(mycounts$log2fc <= -2)
```

Q how many up regulated genes do we have at log2FC \>+2

```{r}
sum(mycounts$log2fc > 2)
```

Q10. Do you trust these results? Why or why not?

we are missing the stats.

##DESeq analysis

```{r, message=FALSE}
library(DESeq2)
```

DESeq, like many BioConductor packages, wnats our input data in a very specific format.

```{r}
dds <- DESeqDataSetFromMatrix(countData = counts,colData = metadata,design = ~dex)
```

the main function in DESeq2 is called DESeq()

```{r}
dds <- DESeq(dds)
res <-results(dds)
```

```{r}
head(res)
```

A common overview figure plots the logFC vs P-value.

```{r}
plot(res$log2FoldChange,-log(res$padj))
abline(v=c(-2,2),col="gray")
abline(h=-log(0.005), col="blue")
```

```{r}
mycols <- rep("gray",nrow(res))
mycols[res$log2FoldChange > 2] <- "red"
mycols[res$log2FoldChange < -2] <- "red"
mycols[res$padj > 0.005] <- "red"

plot(res$log2FoldChange,-log(res$padj),col=mycols)

abline(v=c(-2,2),col="gray")
abline(h=-log(0.005), col="blue")
```

```{r}
plot(res$log2FoldChange,-log(res$padj))
```

```{r}
write.csv(res,file="myresults.csv")
```

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

```

```{r}
columns(org.Hs.eg.db)
```

```{r}
res$symbol <- mapIds(org.Hs.eg.db,
                     keys=row.names(res), # Our genenames
                     keytype="ENSEMBL",        # The format of our genenames
                     column="SYMBOL",          # The new format we want to add
                     multiVals="first")
head(res)

```

```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)

# Examine the first 2 pathways in this kegg set for humans
head(kegg.sets.hs, 2)
```

I need to speak enttrezid so I can check kegg pathway over lap as kegg uses entrez format id.

```{r}

res$entrez <- mapIds(org.Hs.eg.db,
                     keys=row.names(res), # Our genenames
                     keytype="ENSEMBL",        # The format of our genenames
                     column="ENTREZID",          # The new format we want to add
                     multiVals="first")
head(res)
```

I will use the gage function to check for overlap with known kegg pathways

```{r}
foldchanges <- res$log2FoldChange
names(foldchanges) <- res$entrez
head(foldchanges)
```

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)


```

```{r}
attributes(keggres)
```

```{r}
head(keggres$less, 3)
```

hsa05310

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa05310")

```

![A pathway figure](hsa05310.pathview.png)
